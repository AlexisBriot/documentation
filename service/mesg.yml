# name of the service
name: "Ethereum Blockchain"
# description of the service
description: "Connector to Ethereum blockchain"
# Visibility of the service
visibility: ALL
# What need to be published
publish: ALL
# List of events that will be emitted from the worker
events:
  transaction:
    name: "On new transaction"
    description: "Listen to every new transactions on the Ethereum blockchain"
    data: # data sent with the event
      hash:
        description: "hash ot the transaction"
        type: String
      timestamp:
        description: "timestamp ot the transaction"
        type: Number
      from:
        type: String
      to:
        type: String
      value:
        type: Number
# tasks that the service can execute from the application
tasks:
  transaction: # name of the command
    name: "Create and send a transaction"
    description: "This will create and send a transaction on the Ethereum network"
    inputs: # arguments that the command can accept
      from:
        name: "Sender"
        description: "The address that send the transaction"
        type: String
      to:
        name: "Receiver"
        type: String
      amount:
        type: Number
        optional: true
    secrets:
      PRIVATE_KEY:
        description: "The address that will be used to sign the transaction"
        type: String
    outputs: # events that this command will trigger
      transactionResult:
        description: "Transaction succeed"
        data:
          txHash:
            type: String
      failure:
        description: "Transaction failed"
        data:
          error:
            type: String
  methodX:
    inputs:
      from:
        type: String
      contractAddress:
        type: String
      contractArguments:
        type: Object
      amount:
        type: Number
        description: "Default value is 42"
        optional: true
    outputs:
      methodResult:
        data: 
          txHash:
            type: String
            optional: true
# services needed to run the service with all dependencies (docker-compose format)
dependencies:
  app:
    image: my-docker-image
  ethereumNode:
    image: parity
    volumes:
      - "/root/.local/share/io.parity.ethereum" # /!\ Will be bind a folder on the host machine
    ports:
      - 8546 # /!\ Will be bind to random exterior port
      - 30303
